"use strict";(self.webpackChunksf_documentation=self.webpackChunksf_documentation||[]).push([[5264],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return m}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var u=a.createContext({}),p=function(t){var e=a.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},s=function(t){var e=p(t.components);return a.createElement(u.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,u=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),d=p(n),m=r,g=d["".concat(u,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(g,l(l({ref:e},s),{},{components:n})):a.createElement(g,l({ref:e},s))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o.mdxType="string"==typeof t?t:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2562:function(t,e,n){n.r(e),n.d(e,{assets:function(){return s},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),l=["components"],o={},u="Monitoring CPU load using cpuLoadStats Plugin",p={unversionedId:"Integrations/os/linux/cpuloadstats_plugin",id:"Integrations/os/linux/cpuloadstats_plugin",title:"Monitoring CPU load using cpuLoadStats Plugin",description:"cpuLoadStats Metric plugin is an agent-based plugin that collects the following CPU data",source:"@site/docs/Integrations/os/linux/cpuloadstats_plugin.md",sourceDirName:"Integrations/os/linux",slug:"/Integrations/os/linux/cpuloadstats_plugin",permalink:"/docs/Integrations/os/linux/cpuloadstats_plugin",editUrl:"https://github.com/ram-dot-kumar/SFwebsite.git/docs/Integrations/os/linux/cpuloadstats_plugin.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Monitoring Linux OS",permalink:"/docs/Integrations/os/linux/linux_os"},next:{title:"Monitoring File Stats using fileStats Plugin",permalink:"/docs/Integrations/os/linux/filestats_plugin"}},s={},c=[{value:"Tested on",id:"tested-on",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Viewing data and dashboards",id:"viewing-data-and-dashboards",level:2}],d={toc:c};function m(t){var e=t.components,n=(0,r.Z)(t,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"monitoring-cpu-load-using-cpuloadstats-plugin"},"Monitoring CPU load using cpuLoadStats Plugin"),(0,i.kt)("p",null,"cpuLoadStats Metric plugin is an agent-based plugin that collects the following CPU data"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Uptime")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Load average in 1 minute")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Load average in 5 minute")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Load average in 15 minute")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Normalized load in 1 minute")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Normalized load in 5 minute")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Normalized load in 15 minute"))),(0,i.kt)("h2",{id:"tested-on"},"Tested on"),(0,i.kt)("p",null,"Centos: 7.x"),(0,i.kt)("p",null,"RHEL: 7.x"),(0,i.kt)("p",null,"Ubuntu: 14.x, 16.x"),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/Quick_Start/getting_started#sfagent"},"sfAgent")," must be installed")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The cpuLoadStats plugin requires sysstat to be installed"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"To install Sysstat in CentOS/RHEL")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," sudo yum install sysstat\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"To install Sysstat in Ubuntu OS")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," sudo apt install sysstat\n")),(0,i.kt)("h1",{id:"configuring-the-agent"},"Configuring the agent"),(0,i.kt)("p",null,"Add the configuration shown below to ",(0,i.kt)("inlineCode",{parentName:"p"},"config.yaml")," under ",(0,i.kt)("inlineCode",{parentName:"p"},"/opt/sfagent/ directory")),(0,i.kt)("p",null,"Default config"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," key: <profile_key> \ntags: \n  Name: <name> \n  appName: <app_name> \n  projectName: <project_name> \nmetrics: \n  plugins: \n     - name: cpuLoadStats\n       group_name: linux\n       enabled: true\n")),(0,i.kt)("h2",{id:"viewing-data-and-dashboards"},"Viewing data and dashboards"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Data collected by plugin can be viewed in SnappyFlow\u2019s browse data section under metrics"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"plugin=cpuLoadStats")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"documentType=cpuLoadStats")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Dashboard of cpuLoadStats data can be rendered using ",(0,i.kt)("inlineCode",{parentName:"p"},"Template= LinuxCpuLoad")),(0,i.kt)("p",{parentName:"li"},"\u200b"))),(0,i.kt)("h2",{id:""}))}m.isMDXComponent=!0}}]);